[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "theory: a summary of R for Visual Analytics - Chap 1\n\nstarting with R\nbasics about ggplot2\ndive into each layered grammars of ggplot2\n\npractice: some exploration about the dataset\n\nQucik access to Some Plotting Exercise below"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\nThe code below use p_load() of pacman packages to check if tidyverse packages are installed in the computer. If there are, then they will launch into R\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "Importing the data",
    "text": "Importing the data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nGenerating a summary of the imported data\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n\n\n\n\nAbout summary(data_frame)\n\n\n\nIt will display length, class, and mode for categorical variables, and display Min, 1st Qu, Median, Mean, 3rd Qu, Max for numeric variables"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#comparing-r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#comparing-r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "Comparing R Graphics VS ggplot",
    "text": "Comparing R Graphics VS ggplot\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nThere are two principles in Grammar of Graphics:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statistical transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-summary",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-summary",
    "title": "Hands-on Exercise 1",
    "section": "An Overview of Layered Grammar",
    "text": "An Overview of Layered Grammar\nbelow shows how each layer built on top of each other based on the 7 grammars of ggplot2\n\ndataaesgeostatfacetscoordinatethemes\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS)                                                          \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS) +\n  coord_flip()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS) +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-1",
    "title": "Hands-on Exercise 1",
    "section": "Data",
    "text": "Data\n\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\n\n\nggplot(data=exam_data)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "title": "Hands-on Exercise 1",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\n\nAll aesthetics of a plot are specified in the aes() function call\neach geom layer can have its own aes specification\n\nadding the aesthetic element to include the x-axis and the axis’s label\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-geometric-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-geometric-objects",
    "title": "Hands-on Exercise 1",
    "section": "ggplot2 Geometric Objects",
    "text": "ggplot2 Geometric Objects\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\n\n\n\nFor complete list, please refer to here\n\n\n\nGeometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nGeometric Objects: geom_dotplot\n\nwidth of a dot: bin width (or maximum width, depending on the binning algorithm),\ndots are stacked, each dot representing one observation\n\n\nDo thisNot this\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\nInstead should perform the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\n\nGeometric Objects: geom_histogram()\nplotting a histogram using geom_histogram() using MATHS field of exam_data\n\nBasic HistogramModifying geom()Modifying aes()\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nbins: change the number of bins to 20 (default = 30)\nfill: shade the histogram with light blue color\ncolor: change the outline colour to black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")       \n\n\n\n\n\n\n\ndifferent gender are shaded in different colors\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")     \n\n\n\n\n\n\n\n\n\nGeometric Objects: geom-density()\n\ncomputes and plots kernel density estimate - smoothed version of histogram\nalternative to histogram for continuous data that comes from an underlying smooth distribution\n\n\nBasicBy Gender\n\n\ndistribution of Maths scores in a kernel density estimate plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()                 \n\n\n\n\n\n\ntwo kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()                 \n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_boxplot\n\ngeom_boxplot() displays continuous value list.\nvisualises 5 summary statistics (median, 2 hinges and 2 whiskers), and all “outlying” points individually.\n\n\nBasic BoxplotNotched plot\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()                            \n\n\n\n\n\n\n\nNotches are used to help visually assess whether the medians of distributions differ\nIf the notches do not overlap, the medians are different\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_violin\n\ngeom_violin creates violin plot which are comparing multiple data distributions\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()                         \n\n\n\n\n\n\nGeometric Objects: geom_point()\n\ngeom_point() is especially useful for creating scatterplot.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()                                       \n\n\n\n\n\n\nA Combined Plot\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat-1",
    "title": "Hands-on Exercise 1",
    "section": "Stat",
    "text": "Stat\nThe Statistics functions statistically transform data, usually as some form of summary\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\nWorking with Boxplot\nThe default boxplots are incomplete because the positions of the means were not shown.\n\nstat_()geom()\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)                                                      \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)                                                               \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n\n\n\nWorking with scatterplot\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nmethod: loess (default)method: lm\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)                                                             \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)                                                            \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets-1",
    "title": "Hands-on Exercise 1",
    "section": "Facets",
    "text": "Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\nfacet_wrap()facet_grid()\n\n\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)                                                          \n\n\n\n\n\n\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "title": "Hands-on Exercise 1",
    "section": "Coordinates",
    "text": "Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n- coord_cartesian(): default, where you specify x and y values (e.g. allow to zoom in or out). - coord_flip(): a cartesian system with the x and y flipped - coord_fixed(): a cartesian system with a “fixed” aspect ratio - coord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\nWorking with Coordinates\n\nverticalhorizontal\n\n\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()                                                           \n\n\n\n\n\n\nfliping the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()                                                          \n\n\n\n\n\n\n\n\n\nChanging the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\ndefaultrange at 0-100\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)                                                          \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))                                                  \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme",
    "title": "Hands-on Exercise 1",
    "section": "Theme",
    "text": "Theme\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nA list of theme can be found at this link\n\ntheme_gray()theme_classic()theme_minimal()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()                                                       \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()                                                       \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stacked-bar-chart-of-race-distribution-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stacked-bar-chart-of-race-distribution-by-gender",
    "title": "Hands-on Exercise 1",
    "section": "Stacked Bar Chart of Race Distribution by Gender",
    "text": "Stacked Bar Chart of Race Distribution by Gender\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = reorder(RACE, -table(RACE)[RACE]), fill = GENDER)) +\n  geom_bar(position = \"stack\",\n           alpha = 0.9) +\n  geom_text(\n    aes(label = after_stat(count)),\n    stat = \"count\",\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"white\"\n  ) +\n  labs(title = \"Race Distribution by Gender\", x = \"Race\", y = \"Number of Students\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-of-english-scores-by-class",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot of English Scores by Class",
    "text": "Boxplot of English Scores by Class\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = CLASS, y = ENGLISH)) +\n  geom_boxplot(fill = \"#D1EEEE\", color = \"#7A8B8B\") +\n  geom_hline(yintercept = mean(exam_data$ENGLISH), linetype = \"dashed\", color = \"#CD2626\") +\n  stat_summary(\n    fun = mean, \n    geom = \"point\", \n    color = \"#CD2626\"\n  ) +\n  annotate(\n    \"text\", \n    x = 1,  y = mean(exam_data$ENGLISH) + 2,\n    label = paste(\"Avg:\", round(mean(exam_data$ENGLISH), 2)),\n    color = \"#CD2626\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  labs(\n    title = \"English Scores by Class\",\n    x = \"Class\",\n    y = \"English Score\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatterplot-of-math-and-science-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatterplot-of-math-and-science-scores",
    "title": "Hands-on Exercise 1",
    "section": "Scatterplot of Math and Science Scores",
    "text": "Scatterplot of Math and Science Scores\n\n\nShow the code\nggplot(data = exam_data,\n       aes(x = MATHS, y = SCIENCE)) +\n  geom_point(aes(color = GENDER), size = 1.5, alpha = 0.7) +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_vline(xintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_smooth(method = \"lm\", size = 0.5) +      \n  labs(\n    title = \"Correlation between Math and Science Scores\",\n    x = \"Math Score\",\n    y = \"Science Score\"\n  ) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot-of-english-scores-by-class",
    "title": "Hands-on Exercise 1",
    "section": "Density Plot of English Scores by Class",
    "text": "Density Plot of English Scores by Class\n\n\nShow the code\n# Density plot of ENGLISH scores combined for both genders faceted by class\nggplot(data = exam_data, \n       aes(x = ENGLISH, fill = GENDER)) +\n  geom_density(alpha = 0.5, color = \"black\", linewidth = 0.3) + \n  labs(title = \"Distribution of English Scores by Class\", x = \"English Score\") +\n  theme_minimal() +\n  facet_grid(CLASS ~ .) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.text = element_text(size = 8),  \n        legend.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "theory: a summary of R for Visual Analytics - Chap 2\npractice: some exploration about the dataset\n\nQucik access to Some Plotting Exercise below"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-packages",
    "title": "Hands-on Exercise 2",
    "section": "Installing packages",
    "text": "Installing packages\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2\n\ncheck & load packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2",
    "section": "Importing the data",
    "text": "Importing the data\n\nexam_data &lt;- read_csv(\"../data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#stacked-bar-chart-of-race-distribution-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#stacked-bar-chart-of-race-distribution-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "Stacked Bar Chart of Race Distribution by Gender",
    "text": "Stacked Bar Chart of Race Distribution by Gender"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-of-english-scores-by-class",
    "title": "Hands-on Exercise 2",
    "section": "Boxplot of English Scores by Class",
    "text": "Boxplot of English Scores by Class"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#scatterplot-of-math-and-science-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#scatterplot-of-math-and-science-scores",
    "title": "Hands-on Exercise 2",
    "section": "Scatterplot of Math and Science Scores",
    "text": "Scatterplot of Math and Science Scores"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-english-scores-by-class",
    "title": "Hands-on Exercise 2",
    "section": "Density Plot of English Scores by Class",
    "text": "Density Plot of English Scores by Class"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications homepage!\nNote: this homepage is currently under constructions"
  }
]