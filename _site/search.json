[
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html",
    "title": "In-class Exercise 1a: Now You üëÄ It!",
    "section": "",
    "text": "In this hands-on exercise, 2 R packages will be used. They are:\n\ntidyverse\nhaven\n\nThe code chunk used as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#loading-r-packages",
    "title": "In-class Exercise 1a: Now You üëÄ It!",
    "section": "",
    "text": "In this hands-on exercise, 2 R packages will be used. They are:\n\ntidyverse\nhaven\n\nThe code chunk used as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#filtering-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#filtering-pisa-data",
    "title": "In-class Exercise 1a: Now You üëÄ It!",
    "section": "Filtering PISA data",
    "text": "Filtering PISA data\n\n\n\n\n\n\nNote\n\n\n\nthe code under this section filtered PISA data to include only SG data\nthe dataset is saved as a rds file called stu_qqq_SG.rds and loaded back as a dataframe.\nonly stu_qqq_SG.rds will be imported for efficiency purpose for the rest of exercise.\n\n\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nThe code chunk below use filter() of dplyr to filter observation in SG only.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nThe code chunk below use write_rds() to save the data into rds format.\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#importing-filtered-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01a.html#importing-filtered-pisa-data",
    "title": "In-class Exercise 1a: Now You üëÄ It!",
    "section": "Importing filtered PISA data",
    "text": "Importing filtered PISA data\nThe code chunk below uses read_rds() to import PISA SG data into R environment.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "theory: a summary of R for Visual Analytics - Chap 1\n\nstarting with R\nbasics about ggplot2\ndive into each layered grammars of ggplot2\n\npractice: some exploration about the dataset\n\nQucik access to Some Plotting Exercise below"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "Install and launching R packages",
    "text": "Install and launching R packages\nThe code below use p_load() of pacman packages to check if tidyverse packages are installed in the computer. If there are, then they will launch into R\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "Importing the data",
    "text": "Importing the data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nGenerating a summary of the imported data\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n\n\n\n\nAbout summary(data_frame)\n\n\n\nIt will display length, class, and mode for categorical variables, and display Min, 1st Qu, Median, Mean, 3rd Qu, Max for numeric variables"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#comparing-r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#comparing-r-graphics-vs-ggplot",
    "title": "Hands-on Exercise 1",
    "section": "Comparing R Graphics VS ggplot",
    "text": "Comparing R Graphics VS ggplot\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nThere are two principles in Grammar of Graphics:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-on Exercise 1",
    "section": "A Layered Grammar of Graphics",
    "text": "A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-summary",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-summary",
    "title": "Hands-on Exercise 1",
    "section": "An Overview of Layered Grammar",
    "text": "An Overview of Layered Grammar\nbelow shows how each layer built on top of each other based on the 7 grammars of ggplot2\n\ndataaesgeostatfacetscoordinatethemes\n\n\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS)                                                          \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS) +\n  coord_flip()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") +\n  facet_wrap(~ CLASS) +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data-1",
    "title": "Hands-on Exercise 1",
    "section": "Data",
    "text": "Data\n\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\n\n\nggplot(data=exam_data)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "title": "Hands-on Exercise 1",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\n\nAll aesthetics of a plot are specified in the aes() function call\neach geom layer can have its own aes specification\n\nadding the aesthetic element to include the x-axis and the axis‚Äôs label\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-geometric-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2-geometric-objects",
    "title": "Hands-on Exercise 1",
    "section": "ggplot2 Geometric Objects",
    "text": "ggplot2 Geometric Objects\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g.¬†a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\n\n\n\nFor complete list, please refer to here\n\n\n\nGeometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nGeometric Objects: geom_dotplot\n\nwidth of a dot: bin width (or maximum width, depending on the binning algorithm),\ndots are stacked, each dot representing one observation\n\n\nDo thisNot this\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\nInstead should perform the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\n\nGeometric Objects: geom_histogram()\nplotting a histogram using geom_histogram() using MATHS field of exam_data\n\nBasic HistogramModifying geom()Modifying aes()\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nbins: change the number of bins to 20 (default = 30)\nfill: shade the histogram with light blue color\ncolor: change the outline colour to black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")       \n\n\n\n\n\n\n\ndifferent gender are shaded in different colors\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")     \n\n\n\n\n\n\n\n\n\nGeometric Objects: geom-density()\n\ncomputes and plots kernel density estimate - smoothed version of histogram\nalternative to histogram for continuous data that comes from an underlying smooth distribution\n\n\nBasicBy Gender\n\n\ndistribution of Maths scores in a kernel density estimate plot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()                 \n\n\n\n\n\n\ntwo kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()                 \n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_boxplot\n\ngeom_boxplot() displays continuous value list.\nvisualises 5 summary statistics (median, 2 hinges and 2 whiskers), and all ‚Äúoutlying‚Äù points individually.\n\n\nBasic BoxplotNotched plot\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()                            \n\n\n\n\n\n\n\nNotches are used to help visually assess whether the medians of distributions differ\nIf the notches do not overlap, the medians are different\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_violin\n\ngeom_violin creates violin plot which are comparing multiple data distributions\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()                         \n\n\n\n\n\n\nGeometric Objects: geom_point()\n\ngeom_point() is especially useful for creating scatterplot.\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()                                       \n\n\n\n\n\n\nA Combined Plot\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat-1",
    "title": "Hands-on Exercise 1",
    "section": "Stat",
    "text": "Stat\nThe Statistics functions statistically transform data, usually as some form of summary\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\nWorking with Boxplot\nThe default boxplots are incomplete because the positions of the means were not shown.\n\nstat_()geom()\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)                                                      \n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\n‚Ñπ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)                                                               \n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n\n\n\nWorking with scatterplot\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\nmethod: loess (default)method: lm\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)                                                             \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n‚Ñπ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)                                                            \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets-1",
    "title": "Hands-on Exercise 1",
    "section": "Facets",
    "text": "Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\nfacet_wrap()facet_grid()\n\n\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)                                                          \n\n\n\n\n\n\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "title": "Hands-on Exercise 1",
    "section": "Coordinates",
    "text": "Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n- coord_cartesian(): default, where you specify x and y values (e.g.¬†allow to zoom in or out). - coord_flip(): a cartesian system with the x and y flipped - coord_fixed(): a cartesian system with a ‚Äúfixed‚Äù aspect ratio - coord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\nWorking with Coordinates\n\nverticalhorizontal\n\n\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()                                                           \n\n\n\n\n\n\nfliping the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()                                                          \n\n\n\n\n\n\n\n\n\nChanging the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\ndefaultrange at 0-100\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)                                                          \n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))                                                  \n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme",
    "title": "Hands-on Exercise 1",
    "section": "Theme",
    "text": "Theme\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nA list of theme can be found at this link\n\ntheme_gray()theme_classic()theme_minimal()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()                                                       \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()                                                       \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stacked-bar-chart-of-race-distribution-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stacked-bar-chart-of-race-distribution-by-gender",
    "title": "Hands-on Exercise 1",
    "section": "Stacked Bar Chart of Race Distribution by Gender",
    "text": "Stacked Bar Chart of Race Distribution by Gender\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = reorder(RACE, -table(RACE)[RACE]), fill = GENDER)) +\n  geom_bar(position = \"stack\",\n           alpha = 0.9) +\n  geom_text(\n    aes(label = after_stat(count)),\n    stat = \"count\",\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"white\"\n  ) +\n  labs(title = \"Race Distribution by Gender\", x = \"Race\", y = \"Number of Students\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-of-english-scores-by-class",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot of English Scores by Class",
    "text": "Boxplot of English Scores by Class\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = CLASS, y = ENGLISH)) +\n  geom_boxplot(fill = \"#D1EEEE\", color = \"#7A8B8B\") +\n  geom_hline(yintercept = mean(exam_data$ENGLISH), linetype = \"dashed\", color = \"#CD2626\") +\n  stat_summary(\n    fun = mean, \n    geom = \"point\", \n    color = \"#CD2626\"\n  ) +\n  annotate(\n    \"text\", \n    x = 1,  y = mean(exam_data$ENGLISH) + 2,\n    label = paste(\"Avg:\", round(mean(exam_data$ENGLISH), 2)),\n    color = \"#CD2626\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  labs(\n    title = \"English Scores by Class\",\n    x = \"Class\",\n    y = \"English Score\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatterplot-of-math-and-science-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatterplot-of-math-and-science-scores",
    "title": "Hands-on Exercise 1",
    "section": "Scatterplot of Math and Science Scores",
    "text": "Scatterplot of Math and Science Scores\n\n\nShow the code\nggplot(data = exam_data,\n       aes(x = MATHS, y = SCIENCE)) +\n  geom_point(aes(color = GENDER), size = 1.5, alpha = 0.7) +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_vline(xintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_smooth(method = \"lm\", size = 0.5) +      \n  labs(\n    title = \"Correlation between Math and Science Scores\",\n    x = \"Math Score\",\n    y = \"Science Score\"\n  ) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot-of-english-scores-by-class",
    "title": "Hands-on Exercise 1",
    "section": "Density Plot of English Scores by Class",
    "text": "Density Plot of English Scores by Class\n\n\nShow the code\n# Density plot of ENGLISH scores combined for both genders faceted by class\nggplot(data = exam_data, \n       aes(x = ENGLISH, fill = GENDER)) +\n  geom_density(alpha = 0.5, color = \"black\", linewidth = 0.3) + \n  labs(title = \"Distribution of English Scores by Class\", x = \"English Score\") +\n  theme_minimal() +\n  facet_grid(CLASS ~ .) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.text = element_text(size = 8),  \n        legend.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "Hands-on Exercise 3a",
    "section": "",
    "text": "theory: a summary of R for Visual Analytics - Chap 3\n\nplaceholder\na dive into xxx\n\npractice: some exploration about the dataset\n\nQucik access to Some Plotting Exercise below"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 3a",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nIn this exercise, ggiraph, plotly, DT, tidyverse, patchwork packages are used. A summary of the new packages introduced can be found at the section below.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "title": "Hands-on Exercise 3a",
    "section": "Importing data",
    "text": "Importing data\nThe code chunk below is to import the data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggigraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggigraph",
    "title": "Hands-on Exercise 3a",
    "section": "ggigraph",
    "text": "ggigraph\nggiraph is an htmlwidget and a ggplot2 extension which allows interaction made with ggplot geometries\ncontinuing 3 arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\nTooltip\n\nbasicmultiple informationCustomising Tooltip stylestatistics on tooltip\n\n\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\n\nShow the code\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e.¬†geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\nBy hovering the mouse pointer on an data point of interest, the student‚Äôs ID will be displayed.\n\n\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\n\nShow the code\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7.\n\n\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\n\nShow the code\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\n\n\nShow the code\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)                                   \n\n\n\n\n\n\n\n\n\n\n\nHover\n\nHover effect with data_id aestheticStyling\n\n\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = ‚Äúfill:orange;‚Äù.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                                                          \n\n\n\n\n\n\n\nIn the code chunk below, css codes are used to change the highlighting effect.\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                                   \n\n\n\n\n\n\n\n\n\n\nCombining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                                                                                                \n\n\n\n\n\n\n\nclick\n\nClick effect with onclickCoordinated Multiple Views with ggiraph\n\n\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                                                                               \n\n\n\n\n\n\n\nCoordinated multiple views methods has been implemented in the data visualisation below.\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly",
    "title": "Hands-on Exercise 3a",
    "section": "plotly",
    "text": "plotly\nPlotly‚Äôs R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\n\nscatter plot: plot_ly() methodvisual variable: plot_ly() methodCreating an interactive scatter plot: ggplotly() method\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)                                   \n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e.¬†RACE).\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)                                                                                                               \n\n\n\n\n\n\n\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)                                                                                                              \n\n\n\n\n\n\n\n\n\nCoordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk,\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#dt",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#dt",
    "title": "Hands-on Exercise 3a",
    "section": "dt",
    "text": "dt\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\nInteractive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‚ÄòDataTables‚Äô (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")                                                                                                        \n\n\n\n\n\n\n\n\nLinked brushing: crosstalk method\nCode chunk below is used to implement the coordinated brushing shown above.\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!.\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#stacked-bar-chart-of-race-distribution-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#stacked-bar-chart-of-race-distribution-by-gender",
    "title": "Hands-on Exercise 3a",
    "section": "Stacked Bar Chart of Race Distribution by Gender",
    "text": "Stacked Bar Chart of Race Distribution by Gender\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = reorder(RACE, -table(RACE)[RACE]), fill = GENDER)) +\n  geom_bar(position = \"stack\",\n           alpha = 0.9) +\n  geom_text(\n    aes(label = after_stat(count)),\n    stat = \"count\",\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"white\"\n  ) +\n  labs(title = \"Race Distribution by Gender\", x = \"Race\", y = \"Number of Students\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#boxplot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#boxplot-of-english-scores-by-class",
    "title": "Hands-on Exercise 3a",
    "section": "Boxplot of English Scores by Class",
    "text": "Boxplot of English Scores by Class\n\n\nShow the code\nggplot(data = exam_data, \n       aes(x = CLASS, y = ENGLISH)) +\n  geom_boxplot(fill = \"#D1EEEE\", color = \"#7A8B8B\") +\n  geom_hline(yintercept = mean(exam_data$ENGLISH), linetype = \"dashed\", color = \"#CD2626\") +\n  stat_summary(\n    fun = mean, \n    geom = \"point\", \n    color = \"#CD2626\"\n  ) +\n  annotate(\n    \"text\", \n    x = 1,  y = mean(exam_data$ENGLISH) + 2,\n    label = paste(\"Avg:\", round(mean(exam_data$ENGLISH), 2)),\n    color = \"#CD2626\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  labs(\n    title = \"English Scores by Class\",\n    x = \"Class\",\n    y = \"English Score\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#scatterplot-of-math-and-science-scores",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#scatterplot-of-math-and-science-scores",
    "title": "Hands-on Exercise 3a",
    "section": "Scatterplot of Math and Science Scores",
    "text": "Scatterplot of Math and Science Scores\n\n\nShow the code\nggplot(data = exam_data,\n       aes(x = MATHS, y = SCIENCE)) +\n  geom_point(aes(color = GENDER), size = 1.5, alpha = 0.7) +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_vline(xintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_smooth(method = \"lm\", size = 0.5) +      \n  labs(\n    title = \"Correlation between Math and Science Scores\",\n    x = \"Math Score\",\n    y = \"Science Score\"\n  ) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#density-plot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#density-plot-of-english-scores-by-class",
    "title": "Hands-on Exercise 3a",
    "section": "Density Plot of English Scores by Class",
    "text": "Density Plot of English Scores by Class\n\n\nShow the code\n# Density plot of ENGLISH scores combined for both genders faceted by class\nggplot(data = exam_data, \n       aes(x = ENGLISH, fill = GENDER)) +\n  geom_density(alpha = 0.5, color = \"black\", linewidth = 0.3) + \n  labs(title = \"Distribution of English Scores by Class\", x = \"English Score\") +\n  theme_minimal() +\n  facet_grid(CLASS ~ .) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.text = element_text(size = 8),  \n        legend.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "theory: a summary of R for Visual Analytics - Chap 2\n\na summary of 4 ggplot2 extensions\na dive into ggplot2 extensions\n\npractice: some exploration about the dataset\n\nQucik access to Some Plotting Exercise below"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nIn this exercise, beside tidyverse, four R packages will be used. They are: ggrepel, ggthemes, hrbrthemes, patchwork.\nA summary of these 4 packages can be found at the section below.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2",
    "section": "Importing data",
    "text": "Importing data\nThe code chunk below is to import the data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel",
    "title": "Hands-on Exercise 2",
    "section": "ggrepel",
    "text": "ggrepel\nggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text\n\nwith ggrepelwith ggplot2 only\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet‚Äôs look at the code\n\nwith ggrepelwith ggplot2 only\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nHere, we just simply replace geom_text() by geom_text_repel() and geom_label() by geom_label_repel."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggthemes",
    "title": "Hands-on Exercise 2",
    "section": "ggthemes",
    "text": "ggthemes\n\nggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\nggthemes provides ‚Äòggplot2‚Äô themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‚ÄòStata‚Äô, ‚ÄòExcel‚Äô, and The Wall Street Journal, among others.\n\nRefer to this link to learn more about ggplot2 Themes\n\nggplot2 themeEconomist themeWall Street Journal theme\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = 14))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on Exercise 2",
    "section": "hrbrthemes",
    "text": "hrbrthemes\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\nThe second goal centers around productivity for a production workflow. In fact, this ‚Äúproduction workflow‚Äù is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\n\ndefault theme_ipsum()modifying theme_ipsum()\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\naxis_title_size: increase the font size of the axis title to 18\nbase_size: increase the default axis label to 15\ngrid: remove the x-axis grid lines.\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#patchwork",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#patchwork",
    "title": "Hands-on Exercise 2",
    "section": "patchwork",
    "text": "patchwork\nThere are several ggplot2 extension‚Äôs functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package.\npatchwork is specially designed for combining separate ggplot2 graphs into a single figure. It has a very simple syntax where we can create layouts super easily. Here‚Äôs the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /\n\ncreate 3 statistical graphics to be used for composite graphs:\n\np1p2p3\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\np1\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\np2\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\np3\n\n\n\n\n\n\n\nCode chunk below shows a composite of graphs created using patchwork\n\n2 graphs3 graphs3 graphs with tagCreating figure with insert\n\n\nCode below shows a composite of two histograms created using patchwork\n\np1 + p2\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\npatchwork provides auto-tagging to identify subplots\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\ninset_element() place one or several plots freely on top or below another plot\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-multiple-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-multiple-packages",
    "title": "Hands-on Exercise 2",
    "section": "combining multiple packages",
    "text": "combining multiple packages\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist() +\n  theme(plot.title = element_text(size = 12))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#stacked-bar-chart-of-race-distribution-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#stacked-bar-chart-of-race-distribution-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "Stacked Bar Chart of Race Distribution by Gender",
    "text": "Stacked Bar Chart of Race Distribution by Gender\n\n\nShow the code\np4 &lt;- ggplot(data = exam_data, \n       aes(x = reorder(RACE, -table(RACE)[RACE]), fill = GENDER)) +\n  geom_bar(position = \"stack\",\n           alpha = 0.9) +\n  geom_text(\n    aes(label = after_stat(count)),\n    stat = \"count\",\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"white\"\n  ) +\n  labs(title = \"Race Distribution by Gender\", x = \"Race\", y = \"Number of Students\") +\n  theme_fivethirtyeight()\np4"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#boxplot-of-english-scores-by-class",
    "title": "Hands-on Exercise 2",
    "section": "Boxplot of English Scores by Class",
    "text": "Boxplot of English Scores by Class\n\n\nShow the code\np5 &lt;- ggplot(data = exam_data, \n       aes(x = CLASS, y = ENGLISH)) +\n  geom_boxplot(fill = \"grey90\", color = \"grey25\") +\n  geom_hline(yintercept = mean(exam_data$ENGLISH), linetype = \"dashed\", color = \"#CD2626\") +\n  stat_summary(\n    fun = mean, \n    geom = \"point\", \n    color = \"#CD2626\"\n  ) +\n  annotate(\n    \"text\", \n    x = 1,  y = mean(exam_data$ENGLISH) + 2,\n    label = paste(\"Avg:\", round(mean(exam_data$ENGLISH), 2)),\n    color = \"#CD2626\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +\n  labs(\n    title = \"English Scores by Class\",\n    x = \"Class\",\n    y = \"English Score\"\n  ) +\n  theme_wsj()\np5"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#scatterplot-of-math-and-science-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#scatterplot-of-math-and-science-scores",
    "title": "Hands-on Exercise 2",
    "section": "Scatterplot of Math and Science Scores",
    "text": "Scatterplot of Math and Science Scores\n\n\nShow the code\np6 &lt;- ggplot(data = exam_data,\n       aes(x = MATHS, y = SCIENCE)) +\n  geom_point(aes(color = GENDER), size = 1.5, alpha = 0.7) +\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_vline(xintercept = 50, linetype = \"dashed\", color = \"gray\") +  \n  geom_smooth(method = \"lm\", size = 0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  labs(\n    title = \"Correlation between Math and Science Scores\",\n    x = \"Math Score\",\n    y = \"Science Score\"\n  ) +\n  coord_cartesian(xlim = c(0, 100), ylim = c(0, 100)) +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\np6"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-english-scores-by-class",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#density-plot-of-english-scores-by-class",
    "title": "Hands-on Exercise 2",
    "section": "Density Plot of English Scores by Class",
    "text": "Density Plot of English Scores by Class\n\n\nShow the code\np7 &lt;- ggplot(data = exam_data, \n       aes(x = ENGLISH, fill = GENDER)) +\n  geom_density(alpha = 0.5, color = \"black\", linewidth = 0.3) + \n  labs(title = \"Distribution of English Scores by Class\", x = \"English Score\") +\n  theme_tufte() +\n  facet_grid(CLASS ~ .) +\n  theme(axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        legend.text = element_text(size = 8),  \n        legend.title = element_text(size = 8))\np7"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-chart",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#composite-chart",
    "title": "Hands-on Exercise 2",
    "section": "Composite Chart",
    "text": "Composite Chart\n\npatchwork &lt;- (p4 / p6) | p7\npatchwork & theme_economist() +\n  theme(plot.title = element_text(size = 15))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my ISSS608 Visual Analytics and Applications homepage!\nNote: this homepage is currently under constructions"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "version updated: 22 Jan 3PM, fixed the error of EDA4 Description was not pushed to Git properly.\nversion updated: 22 Jan 7PM, included EDA5 and Appendix."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data",
    "title": "Take-home Exercise 1",
    "section": "Data",
    "text": "Data\nThe 2022 Programme for International Student Assessment (PISA) data, released on December 5, 2022, assesses global education systems by testing 15-year-olds in mathematics, reading, and science. The PISA 2022 database includes responses from students, schools, and parents across five data files, primarily in SAS and SPSS formats. This assignment, will only focus on the Student Questionnaire Data File. Additional resources like codebooks, and the PISA 2022 Technical Report are also used as supplementary materials to understand the dataset."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-task",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#project-task",
    "title": "Take-home Exercise 1",
    "section": "Project Task",
    "text": "Project Task\nIn this take-home exercise, 5 EDA visualisations will be used to understand:\n\nthe distribution of Singapore students‚Äô performance in mathematics, reading, and science,\nthe relationship between these performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "title": "Take-home Exercise 1",
    "section": "Loading R packages",
    "text": "Loading R packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               ggdist, ggridges,\n               colorspace,ggstatsplot, \n               tidyverse)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-filtered-pisa-data-for-sg-students",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-filtered-pisa-data-for-sg-students",
    "title": "Take-home Exercise 1",
    "section": "Importing filtered PISA data for SG students",
    "text": "Importing filtered PISA data for SG students\nThe code chunk below uses read_rds() to import PISA SG data into R environment.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-stu_qqq_sg",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary-statistics-of-stu_qqq_sg",
    "title": "Take-home Exercise 1",
    "section": "Summary Statistics of stu_qqq_SG",
    "text": "Summary Statistics of stu_qqq_SG\n\nDataframe DimensionColumn AttributesData Health\n\n\nthe code below use dim() to check the dataframe dimension\n\ndim(stu_qqq_SG)\n\n[1] 6606 1279\n\n\nThe PISA dataset comprises 6606 observations, with 1279 variables. Displaying a sample using standard functions like head() is not feasible due to the sheer number of columns. Similarly, including all columns in the analysis would be impractical.\nA more effective approach involves a thorough understanding of the dataset‚Äôs fields, enabling the selection of relevant variables that are crucial to the analysis.\n\n\nTo understand the structure and content available of the columns in the stu_qqq_SG dataframe, the code below retrieve the attributes of the first three columns\n\nlapply(stu_qqq_SG, attributes)[0:3]\n\n$CNT\n$CNT$label\n[1] \"Country code 3-character\"\n\n\n$CNTRYID\n$CNTRYID$label\n[1] \"Country Identifier\"\n\n\n$CNTSCHID\n$CNTSCHID$label\n[1] \"Intl. School ID\"\n\n\nThe dataframe includes label which can be served as column descriptions, with this, making it easier to identify columns which are more relevant to the analysis.\n\n\nthe code below use anyDuplicated() to check if any duplicated entries in the dataset.\n\nanyDuplicated(stu_qqq_SG)\n\n[1] 0\n\n\nthe code use is.na() to check for total number of missing entries in the dataset.\n\nsum(is.na(stu_qqq_SG))\n\n[1] 4168500\n\n\nAll observations are unique. But a huge number of missing values are found in the given data frame. This suggests that another potential approach to handle this dataset is to eliminate columns with a high percentage of missing values.\n\n\n\n\n\n\nNote\n\n\n\naccording to PISA, it was suggested that cases with fewer than three valid responses received score ‚Äú99‚Äù, indicating a missing scale score due to insufficient responses. This value should be considered as missing values and filtered out if existed in the data set used later."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#understanding-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#understanding-the-data",
    "title": "Take-home Exercise 1",
    "section": "Understanding the Data",
    "text": "Understanding the Data\nGiven the challenge in understanding the labels under each column attributes, which act as column descriptors, and the cumbersome process of examining them one by one, creating a data schema table is a more efficient approach for facilitating in-depth analysis\n\nData Schema OverviewSchema Distribution Insights\n\n\nThe code chunk below uses tibble() to create a data frame. This data frame summarizes essential attributes of each column in the 'stu_qqq_SG', such as column descriptions, the number of missing values, and the count of unique values. The first five rows are displayed for a preliminary understanding of the data structure.\n\n\nShow the code\ndata_schema &lt;- tibble(\n  column_name = names(stu_qqq_SG),\n  description = sapply(stu_qqq_SG, function(col) {\n    lbl &lt;- attr(col, \"label\")\n    if(is.null(lbl)) \"\" else lbl # If label is null, return an empty string\n  }),\n  data_type = sapply(stu_qqq_SG, class),\n  num_missing_values = sapply(stu_qqq_SG, function(col) {\n    sum(is.na(col)) # Calculates the number of NA values in the column\n  }),\n  num_unique_values = sapply(stu_qqq_SG, function(col) {\n    length(unique(col)) # Calculates the number of unique values in the column\n  })\n)\n\nhead(data_schema, 5)\n\n\n# A tibble: 5 √ó 5\n  column_name description         data_type num_missing_values num_unique_values\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;                  &lt;int&gt;             &lt;int&gt;\n1 CNT         Country code 3-cha‚Ä¶ character                  0                 1\n2 CNTRYID     Country Identifier  numeric                    0                 1\n3 CNTSCHID    Intl. School ID     numeric                    0               164\n4 CNTSTUID    Intl. Student ID    numeric                    0              6606\n5 CYC         PISA Assessment Cy‚Ä¶ character                  0                 1\n\n\n\n\nTo delve into the data schema‚Äôs specifics, summary() is used to examine the overall distribution of unique and missing values across the dataset. This step is crucial for understanding the original data‚Äôs structure and determining the data‚Äôs health and integrity.\n\n\nShow the code\nsummary(data_schema)\n\n\n column_name        description         data_type         num_missing_values\n Length:1279        Length:1279        Length:1279        Min.   :   0.0    \n Class :character   Class :character   Class :character   1st Qu.:  69.5    \n Mode  :character   Mode  :character   Mode  :character   Median :3294.0    \n                                                          Mean   :3259.2    \n                                                          3rd Qu.:6606.0    \n                                                          Max.   :6606.0    \n num_unique_values\n Min.   :   1.0   \n 1st Qu.:   1.0   \n Median :   5.0   \n Mean   : 711.3   \n 3rd Qu.:   7.0   \n Max.   :6606.0   \n\n\nThe summary indicates that over 25% of the columns are filled with missing values, and over 25% contain only one unique value. As previously noted, such columns with uniform data may not contribute meaningful insights and could be considered for exclusion to streamline the analysis process.\n\n\n\n\nColumn Description\nA detailed examination of the column descriptions, along with the questionnaire details provided on the technical report reveals the data schema of the 'stu_qqq_SG' dataframe. The following diagram illustrates the data structure:\n\n\n\n\nflowchart TD\nstyle A fill:#000000,color:#ffffff\nstyle B fill:#c73824,color:#ffffff\nstyle H fill:#c73824,color:#ffffff\nstyle I fill:#c73824,color:#ffffff\nA(stu_qqq_SG) --&gt; B(STxxx)\nA --&gt; C(ICxxx)\nA --&gt; D(FLxxx)\nA --&gt; E(WBxxx)\nA --&gt; F(PAxxx)\nA --&gt; G(Wxxx)\nA --&gt; H(PVxxx)\nA --&gt; I(Others)\n\n\n\n\n\n\nThe dataset provides the information of following:\n\nST: Student Questionnaire, including student demographics and Economic, Social, and Cultural Status (ESCS) information. Further details can be found in Annex 5.A of the technical report.\nIC: Information Communication Technology Questionnaire (ICTQ).\nFL: Financial Literacy Questionnaire (FLQ).\nWB: Well-being Questionnaire (WBQ).\nPA: Parent Questionnaire (PaQ).\nW: Final trimmed nonresponse adjusted student weight.\nPV: Plausible Values representing student performance.\nOthers: This includes basic student information and derived variables like the ESCS index. Details of all field could be found under the technical reports\n\nFor this exercise, which focuses on the performance distribution of Singapore students in mathematics, reading, and science, and their correlation with school type, gender, and socioeconomic status, the ST, PV, and Others categories are particularly pertinent. A deeper dive into these fields is available in the subsequent chapter."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dive-into-relevant-information",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dive-into-relevant-information",
    "title": "Take-home Exercise 1",
    "section": "Dive into Relevant Information",
    "text": "Dive into Relevant Information\n\nPerformance in Mathematics, Reading, and Science\nThe dataset organizes Plausible Values (PVs) across subjects: Mathematics, Reading, and Science. Mathematics, for instance, is subdivided into specific topics representing various mathematical competencies.\n\n\n\n\nflowchart LR\nstyle A fill:#000000,color:#ffffff\nstyle B fill:#c73824,color:#ffffff\nstyle C fill:#c73824,color:#ffffff\nstyle D fill:#c73824,color:#ffffff\nA(PV) --&gt; B(Maths)\nA --&gt; C(Reading)\nA --- D(Science)\nB --- E(Change and Relationships)\nB --- F(Quantity)\nB --- G(Space and Shape)\nB --- H(Uncertainty and Data)\nB --- I(Employing Mathematical Concepts, Facts, and Procedures)\nB --- J(Formulating Situations Mathematically)\nB--- K(Interpreting, Applying, and Evaluating Mathematical Outcomes)\nB --- L(Reasoning)\n\n\n\n\n\nFor a balanced analysis of student performance across subjects, it‚Äôs crucial to maintain a consistent level of detail. Each PV score comprises 10 distinct values, reflecting various potential levels of student performance. Therefore, determining the appropriate level of aggregation is essential for an unbiased and comprehensive analysis.\n\nAggregation of PV ScoresUsing PISA methodData Manipulation\n\n\nSelecting a single PV simplifies analysis but may underestimate standard errors and ignoring the variability. PISA analysts note that in large samples, the choice between one and multiple PVs may not significantly alter results.\nAnother approach is to calculate the average PV score for each student in a given subject to represent their overall performance. However, as noted in this literature, this method can severely underestimate standard errors, especially if only a single PV is used.\n\n\nShow the code\n# Selecting the relevant data\nselected_data &lt;- stu_qqq_SG %&gt;% \n  select(CNTSTUID, PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH)\n\n# Calculate the average PV score for each student\nselected_data &lt;- selected_data %&gt;%\n  mutate(AVG_MATH = rowMeans(select(., starts_with(\"PV\")), na.rm = TRUE))\n\n# Reshape the data to long format including the average\nmath_PV &lt;- selected_data %&gt;% \n  pivot_longer(cols = -CNTSTUID, names_to = \"PV_math\", values_to = \"score\")\n\n# Create a custom order for the plot\nmath_PV$PV_math &lt;- factor(math_PV$PV_math, levels = c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \n                                                      \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\", \"AVG_MATH\"))\n\n# Plot the boxplot with custom order and refined theme settings\nggplot(math_PV, aes(x = PV_math, y = score)) + \n  geom_boxplot() + \n  theme_minimal() +\n  labs(title = \"Boxplot of Math Scores for Each Plausible Value and Average\", \n       x = \"Math Performance\", \n       ) +\n  scale_x_discrete(labels = c(\"PV1\", \"PV2\", \"PV3\", \"PV4\", \"PV5\", \"PV6\", \"PV7\", \"PV8\", \"PV9\", \"PV10\", \"Average\")) +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5),\n        axis.title.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.ticks.x = element_line(),      \n        axis.line.x = element_line())\n\n\n\n\n\nThe boxplot demonstrates that students‚Äô performances vary across the different Plausible Values (PVs) in mathematics, suggesting that a single PV may not fully capture an individual‚Äôs skillset. Averaging the scores provides a generalized view to identify broad patterns and trends. Additionally, calculating the variance of PVs for each student offers insights into their performance stability across different mathematical competencies.\n\n\nalternatively, under How to prepare and analyse the PISA database, a step by step instruction is illustrated as below:\n\nthe code chunk below compare the difference of using PISA and aggregation method in a historgam to illustrate the distribution\n\n\nShow the code\nall_PVs &lt;- pivot_longer(selected_data, cols = starts_with(\"PV\"), names_to = \"PV\", values_to = \"score\")\n\nggplot() +\n  geom_density(data = all_PVs, aes(x = score, fill = \"PISA Method\"), color = \"grey90\", fill = \"grey90\") + \n  geom_density(data = selected_data, aes(x = AVG_MATH, linetype = \"Agg Method\"), color = \"#c73824\", size = 0.8, linetype = \"dotted\") +\n  labs(title = \"Density Plot of PV Math Scores for SG Students\", x = \"Score\", y = \"Density\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(),\n    axis.ticks.x = element_line(),\n    axis.line.x = element_line(),\n    legend.position = \"right\",\n    legend.title = element_text(size = 8),\n    legend.text = element_text(size = 8)\n  ) +\n  guides(fill = guide_legend(title = \"Legend\"), linetype = guide_legend(title = \"Legend\"))\n\n\n\n\n\nThe density plot provides a visual comparison between the detailed PISA method(in grey shde) and the simplified aggregate(in red dotted line) approach. Although the PISA method offers a comprehensive view, capturing the full spectrum of data, its expansive range may not significantly enhance the understanding of general subject performance.\nThis plot reveals that the PISA method, while meticulous, may add unnecessary complexity to the overall evaluation of student performance. Unless the analysis aims to investigate specific patterns within the PVs, the broader range of the histogram does not contribute additional insights into the overarching trends.\n\n\nIn summary, averaging PVs provides a snapshot of general student performance, revealing dominant trends and serving as a foundation for further detailed analysis. The inclusion of variance calculations adds depth by assessing the balance and consistency of individual performances.\nThe code chunk below created new aggregated columns for PV values.\n\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(\n    PV_avg_math = rowMeans(select(., starts_with(\"PV\") & ends_with(\"MATH\")), na.rm = TRUE),\n    PV_var_math = apply(select(., starts_with(\"PV\") & ends_with(\"MATH\")), 1, var, na.rm = TRUE),\n    PV_avg_read = rowMeans(select(., starts_with(\"PV\") & ends_with(\"READ\")), na.rm = TRUE),\n    PV_var_read = apply(select(., starts_with(\"PV\") & ends_with(\"READ\")), 1, var, na.rm = TRUE),\n    PV_avg_scie = rowMeans(select(., starts_with(\"PV\") & ends_with(\"SCIE\")), na.rm = TRUE),\n    PV_var_scie = apply(select(., starts_with(\"PV\") & ends_with(\"SCIE\")), 1, var, na.rm = TRUE)\n  )\n\nAs the variance value contains extreme values, these data are also binned into ‚Äòlow‚Äô, ‚Äòlower-mid‚Äô, ‚Äòupper-mid‚Äô, ‚Äòhigh‚Äô to indicate students‚Äô performance consistency\n\nstu_qqq_SG &lt;- stu_qqq_SG %&gt;%\n  mutate(\n    consistency_math = cut(\n      PV_var_math,\n      breaks = quantile(PV_var_math, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE),\n      labels = c('high', 'upper-mid', 'lower-mid', 'low'),\n      include.lowest = TRUE\n    ),\n    consistency_read = cut(\n      PV_var_read,\n      breaks = quantile(PV_var_read, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE),\n      labels = c('high', 'upper-mid', 'lower-mid', 'low'),\n      include.lowest = TRUE\n    ),\n    consistency_sci = cut(\n      PV_var_scie,\n      breaks = quantile(PV_var_scie, probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE),\n      labels = c('high', 'upper-mid', 'lower-mid', 'low'),\n      include.lowest = TRUE\n    )\n  )\n\n\n\n\n\n\nSchools\nBased on the documentation and column distribution, 3 columns listed below brought my attention:\n\nCNTSCHID: Intl. School ID\nPROGN: Unique national study programme code\nPQSCHOOL: School quality (WLE)\n\n\nData SummaryData QualityData Distribution - PROGNData Distribution - CNTSCHID\n\n\nThe code below use filter() to select relevant columns from the data schema\n\ndata_schema %&gt;%\n  filter(column_name %in% c('CNTSCHID', 'PROGN', 'PQSCHOOL'))\n\n# A tibble: 3 √ó 5\n  column_name description         data_type num_missing_values num_unique_values\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;                  &lt;int&gt;             &lt;int&gt;\n1 CNTSCHID    Intl. School ID     numeric                    0               164\n2 PROGN       Unique national st‚Ä¶ character                  0                 2\n3 PQSCHOOL    School quality (WL‚Ä¶ numeric                 6606                 1\n\n\nPQSCHOOL intended to represent the quality of schools as evaluated by parents, as indicated in the technical report chapter 19. However, it‚Äôs worth noting that for the Singapore dataset, all values are missing. This suggests that this question was not included in the context of Singapore.\nPROGN reveals the presence of two unique programs in the dataset. A closer investigation, based on the codebook provided, indicates that these two values represent different levels of education. This distinction could introduce bias when comparing lower and upper secondary education. Therefore, further investigation is required to understand the distribution of these values and decide whether to analyze the two groups separately.\n\n07020001: Singapore : Lower Secondary education\n07020001: Singapore : Upper Secondary education\n\nAlternatively, CNTSCHID provides a unique index for different school IDs. None of the value is missing, and there are 164 unique entries for this column.\n\n\nThe code chunk below converts this column into a factor which better represents the categories rather than quantitative values\n\nstu_qqq_SG$CNTSCHID &lt;- factor(stu_qqq_SG$CNTSCHID)\n\n\n\nThe code below calculates the distribution of the two different programs surveyed in the dataset. Notably, we observed that 07020001, which represents Lower Secondary Education, comprises only 72 entries, approximately 1% of the total dataset. Given this small proportion, dropping this data may be a prudent choice to avoid biases stemming from the differing levels of education surveyed.\n\nstu_qqq_SG %&gt;%\n  count(PROGN) %&gt;%\n  mutate(Percentage = n / sum(n) * 100)\n\n# A tibble: 2 √ó 3\n  PROGN        n Percentage\n  &lt;chr&gt;    &lt;int&gt;      &lt;dbl&gt;\n1 07020001    72       1.09\n2 07020002  6534      98.9 \n\n\nthe code chunk below is to retain only the records related to Upper Secondary Education (where PROGN == \"07020002\")\n\nstu_qqq_SG_filtered &lt;- stu_qqq_SG %&gt;%\n  filter(PROGN == \"07020002\")\n\n\n\nThe CNTSCHID column contains 168 unique values, indicating the participation of 168 different schools in the exercise. However, without further information on school types or educational quality, it‚Äôs challenging to draw conclusions solely from this data. To gain insight into the source of the students and the distribution of the number of students from each school, we group the dataset by school ID (CNTSCHID) and calculate the student count per school. This is then visualized with a box plot, showing the number of students per school.\n\n\nShow the code\nstudent_count_per_school &lt;- stu_qqq_SG_filtered %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(NumberOfStudents = n())\n\nggplot(student_count_per_school, aes(x = NumberOfStudents)) +\n  stat_dots(side = \"top\",\n            justification = 1.5,\n            binwidth = 0.8,\n            dotsize = 0.8) + \n  geom_boxplot(width = 0.20, position = position_nudge(y = 0.1)) +  \n  scale_x_continuous(labels = scales::label_comma(),  # Format labels with commas\n                     breaks = seq(0, max(student_count_per_school$NumberOfStudents)+5, by = 5), \n                     limits = c(0, max(student_count_per_school$NumberOfStudents)+5), expand = c(0, 0)) +  \n  labs(title = \"Distribution of Student Number from Each Surveyed School\", x = \"Number of Students/School\") + \n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        panel.grid.major = element_blank(),  \n        panel.grid.minor = element_blank(),\n        axis.ticks.x = element_line(),      \n        axis.line.x = element_line()) \n\n\n\n\n\n\n\n\n\n\nGender\nBased on the documentation and column distribution, ST004D01T represents Student (Standardized) Gender.\n\nData SummaryData QualityData Distribution\n\n\nThe code chunk below checks the summary of the column in the dataset. This data is currently in numeric, and need to be adjusted as categorical, as 1 and 2 indicates the index of the gender.\n\ndata_schema %&gt;%\n  filter(column_name %in% c('ST004D01T'))\n\n# A tibble: 1 √ó 5\n  column_name description         data_type num_missing_values num_unique_values\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;                  &lt;int&gt;             &lt;int&gt;\n1 ST004D01T   Student (Standardi‚Ä¶ numeric                    0                 2\n\n\nThere are no missing entries in this column, and it contains two unique values representing gender categories.\n\n\nThe code chunk below converts this column into a factor which better represents the categories (like gender) rather than quantitative values\n\nstu_qqq_SG_filtered$ST004D01T &lt;- factor(stu_qqq_SG_filtered$ST004D01T)\n\n\n\nThe code chunk below give an initial distribution to understand the number of students in each gender participating in the survey\n\n\nShow the code\nggplot(stu_qqq_SG_filtered, aes(x = ST004D01T)) +\n  geom_bar(fill = \"grey80\", alpha = 0.75, width = 0.5) +\n  geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) + \n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.major = element_blank(),  # Remove major grid lines\n    panel.grid.minor = element_blank(),  # Remove minor grid lines\n    axis.title.y = element_blank(),  # Remove y-axis title\n    axis.text.y = element_blank(),  # Remove y-axis text (labels)\n    axis.ticks.y = element_blank(),  # Remove y-axis ticks\n    axis.ticks.x = element_line(),      \n    axis.line.x = element_line() \n  ) +\n  labs(title = \"Number of Students by Gender\", x = \"Gender Index\", y = \"\")\n\n\n\n\n\nThere are 3248 students in gender category 1 and 3358 students in gender category 2. The sample size is substantial, allowing for generalization. Additionally, the sample population exhibits a balanced distribution between both genders, enabling a fair and comprehensive analysis with equal representation.\n\n\n\n\n\nSocioeconomic Status\nIn the Student Questionnaire, there are several questions labeled as STxxx, which pertain to the Economic, Social, and Cultural Status (ESCS) section, as outlined in Annex 5.A of the technical report. Additionally, there is a distinct column labeled ESCS, described as an index representing economic, social, and cultural status.\nThis composite ESCS index, as illustrated in chapter 19 of the technical report, is derived from the responses in the Student Questionnaire. It serves as a comprehensive composite value, encompassing various influencing factors. Consequently, this ESCS index should be utilized for analytical purposes.\n\n\nData SummaryData QualityData DistributionData Manipulation\n\n\nThe code below use filter() to select relevant columns from the data schema\n\ndata_schema %&gt;%\n  filter(column_name %in% c('ESCS'))\n\n# A tibble: 1 √ó 5\n  column_name description         data_type num_missing_values num_unique_values\n  &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;                  &lt;int&gt;             &lt;int&gt;\n1 ESCS        Index of economic,‚Ä¶ numeric                   47              5815\n\n\nThe code chunk below use head() to visulize the first few values of ESCS\n\nhead(stu_qqq_SG_filtered$ESCS)\n\n[1]  0.1836  0.8261 -1.0357 -0.9606  0.0856  0.1268\n\n\nThe ESCS contains an index which is a numeric value indicating the economic, social and cultural status using both positive and negative floats.\n\n\nThere are only 47 missing entries, which account for less than 0.8% of the dataset. Such a small proportion is considered insignificant for analysis, and these data points can be safely dropped in a dataset of this size.\nCode below to calculate the number of missing values and the percentage of missing values\n\nstu_qqq_SG_filtered %&gt;%\n  summarise(MissingCount = sum(is.na(ESCS)),\n            PercentageMissing = (MissingCount / n()) * 100)\n\n# A tibble: 1 √ó 2\n  MissingCount PercentageMissing\n         &lt;int&gt;             &lt;dbl&gt;\n1           47             0.719\n\n\nThe code chunk below is to select non-missing values for ESCS in the dataset\n\nfiltered_data &lt;- stu_qqq_SG_filtered %&gt;%\n  filter(!is.na(ESCS))\n\n\n\nThe code chunk below display the distribution of ESCS index among surveryed students\n\n\nShow the code\nggplot(filtered_data, aes(x = ESCS)) +\n  geom_density(fill = \"grey90\", alpha = 0.5) +  # Density plot\n  geom_boxplot(width = 0.1) +  # Boxplot\n  theme_minimal() +\n  labs(title = \"Density Plot and Boxplot for ESCS Index Distribution\", x = \"ESCS Index\") +\n  # adjust x-axis label interval\n  scale_x_continuous(breaks = seq(-4, 4, by = 0.5)) +\n  # style\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(), \n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(),\n    axis.line.x = element_line()\n  )\n\n\n\n\n\nThe density plot, shaded in grey, suggests a roughly normal distribution of ESCS scores, with the majority of data clustering around the center. This is indicated by the bell-shaped curve with its peak at the mean ESCS Index value. Overall, the plot suggests a symmetrical distribution of ESCS Index values, with no significant skewness or outliers.\n\n\nThe column is further binned into lower, lower_mid, upper_mid, and upper as ESCS_bin:\n\nbin_boundaries &lt;- quantile(filtered_data$ESCS, probs = c(0, 0.25, 0.5, 0.75, 1))\nbin_labels &lt;- c(\"lower\", \"lower-mid\", \"upper-min\", \"upper\")\nfiltered_data$ESCS_bin &lt;- cut(filtered_data$ESCS, breaks = bin_boundaries, labels = bin_labels, include.lowest = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filtering-dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#filtering-dataset",
    "title": "Take-home Exercise 1",
    "section": "Filtering Dataset",
    "text": "Filtering Dataset\nThe code chunk below used to only include the relevant data fields for analysis. We have intentionally retained all ‚ÄúPVs‚Äù (Potential Variables) to ensure their availability should we require a more comprehensive examination in the future.\n\n\nShow the code\npisa_new &lt;- filtered_data %&gt;%\n  select(CNTSTUID, CNTSCHID, ST004D01T, starts_with(\"PV\"), ESCS, ESCS_bin, starts_with('consistency'))\n\n# View the resulting dataframe\nhead(pisa_new,5)\n\n\n# A tibble: 5 √ó 124\n  CNTSTUID CNTSCHID ST004D01T PV1MATH PV2MATH PV3MATH PV4MATH PV5MATH PV6MATH\n     &lt;dbl&gt; &lt;fct&gt;    &lt;fct&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 70200001 70200052 1            639.    601.    621.    632.    579.    592.\n2 70200002 70200134 2            697.    754.    672.    657.    621.    656.\n3 70200003 70200112 2            694.    654.    697.    646.    678.    644.\n4 70200004 70200004 2            427.    410.    424.    389.    331.    380.\n5 70200005 70200152 1            436.    453.    392.    440.    443.    453.\n# ‚Ñπ 115 more variables: PV7MATH &lt;dbl&gt;, PV8MATH &lt;dbl&gt;, PV9MATH &lt;dbl&gt;,\n#   PV10MATH &lt;dbl&gt;, PV1READ &lt;dbl&gt;, PV2READ &lt;dbl&gt;, PV3READ &lt;dbl&gt;, PV4READ &lt;dbl&gt;,\n#   PV5READ &lt;dbl&gt;, PV6READ &lt;dbl&gt;, PV7READ &lt;dbl&gt;, PV8READ &lt;dbl&gt;, PV9READ &lt;dbl&gt;,\n#   PV10READ &lt;dbl&gt;, PV1SCIE &lt;dbl&gt;, PV2SCIE &lt;dbl&gt;, PV3SCIE &lt;dbl&gt;, PV4SCIE &lt;dbl&gt;,\n#   PV5SCIE &lt;dbl&gt;, PV6SCIE &lt;dbl&gt;, PV7SCIE &lt;dbl&gt;, PV8SCIE &lt;dbl&gt;, PV9SCIE &lt;dbl&gt;,\n#   PV10SCIE &lt;dbl&gt;, PV1MCCR &lt;dbl&gt;, PV2MCCR &lt;dbl&gt;, PV3MCCR &lt;dbl&gt;, PV4MCCR &lt;dbl&gt;,\n#   PV5MCCR &lt;dbl&gt;, PV6MCCR &lt;dbl&gt;, PV7MCCR &lt;dbl&gt;, PV8MCCR &lt;dbl&gt;, ‚Ä¶\n\n\nThe code below changes the datatype for the unique student ID\n\n\nShow the code\npisa_new$CNTSTUID &lt;- as.factor(pisa_new$CNTSTUID)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-1-distribution-of-singapore-students-performance-in-mathematics-reading-and-science",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-1-distribution-of-singapore-students-performance-in-mathematics-reading-and-science",
    "title": "Take-home Exercise 1",
    "section": "EDA 1: Distribution of Singapore Students‚Äô Performance in mathematics, Reading, and Science",
    "text": "EDA 1: Distribution of Singapore Students‚Äô Performance in mathematics, Reading, and Science\nThe code chunk below creates a histogram to illustrate the distribution of Student Performance across subjects.\n\n\nShow the code\n# Select average columns\npv_avg &lt;- pisa_new %&gt;%\n  select(PV_avg_math, PV_avg_read, PV_avg_scie)\n\n# Reshape the data for plotting\npv_avg &lt;- gather(pv_avg, key = \"Subject\", value = \"Average_Score\")\n\n# Create a labeller function to rename facet titles\ncustom_labeller &lt;- function(variable, value) {\n  if (variable == \"Subject\") {\n    value &lt;- case_when(\n      value == \"PV_avg_math\" ~ \"Math\",\n      value == \"PV_avg_read\" ~ \"Read\",\n      value == \"PV_avg_scie\" ~ \"Science\",\n      TRUE ~ as.character(value)\n    )\n  }\n  return(value)\n}\n\navg_dist &lt;- ggplot(pv_avg, \n       aes(x = Average_Score, fill = Subject)) +\n  geom_histogram(bins = 25, boundary = 5, color = \"white\", fill = \"grey80\") +\n  geom_boxplot(width = 50, outlier.size = 0.2, outlier.color = \"#c73824\", position = position_dodge(width = 0.75), fill = \"white\", color = \"black\") +\n  labs(title = \"Distribution of Performance among Subjects\", x = \"Average Score\", y = \"Frequency\") +\n  theme_minimal() +\n  facet_wrap(~ Subject, scales = \"free\", nrow = 3, label = custom_labeller) + \n  theme(\n    strip.text = element_text(size = 12, face = \"bold\")\n  ) +\n  coord_cartesian(xlim = c(200, 800), ylim = c(0, 800)) +  # Set x and y limits\n  geom_vline(data = pv_avg %&gt;%\n               group_by(Subject) %&gt;%\n               summarize(mean_score = mean(Average_Score), median_score = median(Average_Score)),\n             aes(xintercept = mean_score), color = \"#c73824\", linetype = \"dashed\") +  # Add mean vertical lines\n  geom_text(data = pv_avg %&gt;%\n               group_by(Subject) %&gt;%\n               summarize(mean_score = mean(Average_Score), median_score = median(Average_Score)),\n             aes(x = mean_score - 50, y = Inf, label = paste(\"Mean:\", round(mean_score, 2))), color = \"#c73824\", vjust = 1, size = 3) +  \n  geom_vline(data = pv_avg %&gt;%\n               group_by(Subject) %&gt;%\n               summarize(mean_score = mean(Average_Score), median_score = median(Average_Score)),\n             aes(xintercept = median_score), color = \"#0477bf\", linetype = \"dashed\") +  # Add median vertical lines\n  geom_text(data = pv_avg %&gt;%\n               group_by(Subject) %&gt;%\n               summarize(mean_score = mean(Average_Score), median_score = median(Average_Score)),\n             aes(x = median_score + 50, y = Inf, label = paste(\"Median:\", round(median_score, 2))), color = \"#0477bf\", vjust = 1, size = 3) +  \n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(), \n    axis.title.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\")\n    )    \n\n# avg_dist\n\n\nThe code chunk below creates a density plot to illustrate the distribution of Performance Consistency among Subject.\n\n\nShow the code\n# Select var columns\npv_var &lt;- pisa_new %&gt;%\n  select(Math = PV_var_math, Science = PV_var_scie, Read = PV_var_read)\npv_var &lt;- gather(pv_var, key = \"Subject\", value = \"Score_Variance\")\nvar_dist &lt;- ggplot(pv_var, aes(x = Score_Variance, fill = Subject)) +\n  geom_density(alpha = 0.2, color = \"white\", size = 0.3) +  \n  labs(title = \"Distribution of Performance Consistency among Subjects\", x = \"Variance\") +  \n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(), \n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\")\n  ) +\n  scale_x_continuous(limits = c(0, 6000))  # Adjust x-axis limits\n# var_dist\n\n\nThe code chunk below creates a heatmap to illustrate the relationship between students preformance in different subjects.\n\n\nShow the code\n# Select variables of interest and rename them\nselected_vars &lt;- pisa_new %&gt;%\n  select(PV_avg_math, PV_avg_read, PV_avg_scie, PV_var_math, PV_var_read, PV_var_scie) %&gt;%\n  rename(\n    \"Math Avg\" = PV_avg_math,\n    \"Read Avg\" = PV_avg_read,\n    \"Science Avg\" = PV_avg_scie,\n    \"Math Variance\" = PV_var_math,\n    \"Read Variance\" = PV_var_read,\n    \"Science Variance\" = PV_var_scie\n  )\n\n# Create the correlogram\ncorrelogram &lt;- ggcorrmat(\n  data = selected_vars,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title = \"Correlogram for Student Performance\",\n  subtitle = \"Subject Performance is relatively related in a linear manner\"\n)\n\n# Display the correlogram\n# correlogram\n\n\nThe code chunk below patch all the plots together in 1 plot.\n\n\nShow the code\nplot1 &lt;- avg_dist\nplot3 &lt;- var_dist\nplot2 &lt;- correlogram\n\npatchwork &lt;- (plot1 | (plot3 / plot2))\npatchwork &lt;- patchwork +\n  plot_annotation(title = \"Distribution of Singapore Students Performance in Mathematics, Reading, and Science\", \n                  theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)))\n\npatchwork\n\n\n\n\n\nThe visualizations present an overview of the performance distribution of Singapore students in mathematics, reading, and science.\n\nSG students preforms better in Maths and Science compared to readings in general, with a higher mean, median, and along with a more prominent upper quartile boxplots.\nA slightly left-skewed distribution observed for math, but nearly symmetric for reading and science. This suggests that while students generally perform well, a significant number excel in math compared to the other subjects.\nReading, however, shows more outliers on the lower end, implying a struggle among a notable group of students\nThe variance in reading scores is the most pronounced, indicating inconsistent performance within the subject, hinting at possible disparities in students‚Äô abilities to tackle different reading materials or question types. This variability could result in a wider spread of scores, influencing the overall lower mean in reading.\nIn contrast, the lower variance in mathematics and science suggests more uniform achievement, pointing towards consistent individual performance in these subjects.\nThe correlogram reinforces the interconnection between subjects, with math and science exhibiting a particularly strong positive correlation. However, the relationship between individual consistency (variance) and overall grades is not immediately apparent, suggesting that high variance in subject performance does not necessarily correlate with lower overall grades or the opposite."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-2-relationship-between-performances-with-gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-2-relationship-between-performances-with-gender",
    "title": "Take-home Exercise 1",
    "section": "EDA 2: Relationship between Performances with Gender",
    "text": "EDA 2: Relationship between Performances with Gender\nThe code chunk below use a Half Eye graph and Boxplot to understand the SG students maths performance by gender.\n\n\nShow the code\npv_gender &lt;- pisa_new %&gt;%\n  select(Math = PV_avg_math, Science = PV_avg_scie, Reading = PV_avg_read, Gender = ST004D01T, consistency_math, consistency_read, consistency_sci)\n\npv_math_gender &lt;- ggplot(pv_gender, \n       aes(y = Gender, \n           x = Math)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               height = 0.75) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) + \n  theme_minimal() +\n  labs(title = \"Distribution of Students' Maths Performance by Gender\", x = \"average PV\") +\n  theme_minimal() +\n  theme(legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\"))\n\n# Calculate mean and median\nmean_math &lt;- mean(pv_gender$Math, na.rm = TRUE)\nmedian_math &lt;- median(pv_gender$Math, na.rm = TRUE)\n\n# Add vertical lines for mean and median and label them with shifted text\npv_math_gender &lt;- pv_math_gender +\n  geom_vline(xintercept = mean_math, color = \"#c73824\", linetype = \"dashed\") +\n  geom_vline(xintercept = median_math, color = \"#0477bf\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean_math - 70, y = Inf, vjust = 1, label = paste(\"Mean =\", round(mean_math, 2)), color = \"#c73824\") +\n  annotate(\"text\", x = median_math + 70, y = Inf, vjust = 1, label = paste(\"Median =\", round(median_math, 2)), color = \"#0477bf\")\n\n# pv_math_gender\n\n\nThe code chunk below use a Half Eye graph and Boxplot to understand the SG students science performance by gender.\n\n\nShow the code\npv_sci_gender &lt;- ggplot(pv_gender, \n       aes(y = Gender, \n           x = Science)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               height = 0.75) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) + \n  theme_minimal() +\n  labs(title = \"Distribution of Students' Science Performance by Gender\", x = \"average PV\") +\n  theme_minimal() +\n  theme(legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\"))\n\n# Calculate mean and median\nmean_sci &lt;- mean(pv_gender$Science, na.rm = TRUE)\nmedian_sci &lt;- median(pv_gender$Science, na.rm = TRUE)\n\n# Add vertical lines for mean and median and label them with shifted text\npv_sci_gender &lt;- pv_sci_gender +\n  geom_vline(xintercept = mean_sci, color = \"#c73824\", linetype = \"dashed\") +\n  geom_vline(xintercept = median_sci, color = \"#0477bf\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean_sci - 70, y = Inf, vjust = 1, label = paste(\"Mean =\", round(mean_sci, 2)), color = \"#c73824\") +\n  annotate(\"text\", x = median_sci + 70, y = Inf, vjust = 1, label = paste(\"Median =\", round(median_sci, 2)), color = \"#0477bf\")\n\n# pv_sci_gender\n\n\nThe code chunk below use a Half Eye graph and Boxplot to understand the SG students reading performance by gender.\n\n\nShow the code\npv_read_gender &lt;- ggplot(pv_gender, \n       aes(y = Gender, \n           x = Reading)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               height = 0.75) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) + \n  theme_minimal() +\n  labs(title = \"Distribution of Students' Reading Performance by Gender\", x = \"average PV\") +\n  theme_minimal() +\n  theme(legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\"))\n\n# Calculate mean and median\nmean_read &lt;- mean(pv_gender$Reading, na.rm = TRUE)\nmedian_read &lt;- median(pv_gender$Reading, na.rm = TRUE)\n\n# Add vertical lines for mean and median and label them with shifted text\npv_read_gender &lt;- pv_read_gender +\n  geom_vline(xintercept = mean_read, color = \"#c73824\", linetype = \"dashed\") +\n  geom_vline(xintercept = median_read, color = \"#0477bf\", linetype = \"dashed\") +\n  annotate(\"text\", x = mean_read - 70, y = Inf, vjust = 1, label = paste(\"Mean =\", round(mean_read, 2)), color = \"#c73824\") +\n  annotate(\"text\", x = median_read + 70, y = Inf, vjust = 1, label = paste(\"Median =\", round(median_read, 2)), color = \"#0477bf\")\n\n# pv_read_gender\n\n\nThe code chunk below shows mapped out the % of students coming from each performance consistency level for all subjects and gender.\n\n\nShow the code\n# Define a custom blue color palette\nblue_palette &lt;- c(\"#ccece6\", \"#99d8c9\", \"#66c2a4\", \"#238b45\")\n\n# Reshape the data into long format for consistency categories and calculate percentages\npv_gender_long &lt;- pv_gender %&gt;%\n  pivot_longer(\n    cols = c(consistency_math, consistency_read, consistency_sci),\n    names_to = \"Subject_Consistency\",\n    values_to = \"Consistency\"\n  ) %&gt;%\n  mutate(Subject = case_when(\n    grepl(\"math\", Subject_Consistency) ~ \"Math\",\n    grepl(\"read\", Subject_Consistency) ~ \"Reading\",\n    grepl(\"sci\", Subject_Consistency) ~ \"Science\",\n    TRUE ~ NA_character_\n  )) %&gt;%\n  select(-Subject_Consistency) %&gt;%\n  group_by(Subject, Gender, Consistency) %&gt;%\n  summarise(Count = n(), .groups = 'drop') %&gt;%\n  group_by(Subject, Gender) %&gt;%\n  mutate(Total = sum(Count), Percentage = Count / Total) %&gt;%\n  ungroup()\n\n# Creating the stacked bar chart with custom blue color palette\npv_gender_stacked_bar &lt;- ggplot(pv_gender_long, aes(x = Subject, y = Percentage, fill = Consistency)) +\n  geom_bar(stat = \"identity\", position = \"fill\") +\n  geom_text(aes(label = scales::percent(Percentage, accuracy = 0.1)),\n            position = position_fill(vjust = 0.5),\n            color = \"black\", size = 3) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  scale_fill_manual(values = blue_palette) +  # Use custom blue palette\n  facet_wrap(~Gender) +  # Separate by gender\n  labs(title = \"% of Students' Performance Consistency by Subject and Gender\",\n       x = \"Subject\",\n       y = \"Percentage\") +\n  theme_minimal() +\n  theme(legend.title = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major = element_blank(), \n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.ticks.x = element_line(color = \"grey\"),  \n    axis.line.x = element_line(color = \"grey\"))\n\n# pv_gender_stacked_bar\n\n\nThe code chunk below zoom into the individual Maths PV values, to understand which is infuncing factor which resulted in the observation in the previous plot between the 2 gender.\n\n\nShow the code\npv_gender_math_long &lt;- pisa_new %&gt;%\n  pivot_longer(cols = matches(\"^PV[0-9]+MATH\"), \n               names_to = \"PVxMath\", values_to = \"Value\") %&gt;%\n  select(Gender = ST004D01T, PVxMath, Value)\n\n# Rename the x-axis labels\nx_axis_labels &lt;- paste0(\"PV\", 1:10)\n\n# Create the plot with custom colors and x-axis labels\nmath_by_gender_pv &lt;- pv_gender_math_long %&gt;%\n  ggplot(aes(x = factor(PVxMath, levels = unique(PVxMath)), y = Value, fill = as.factor(Gender))) +\n  geom_boxplot(alpha = 0.7, outlier.size = 0.5) +\n  labs(title = \" Distribution of Individual Math Performance by Gender\",\n       x = \"\", y = \"Value\", fill = \"Gender\") +\n  scale_x_discrete(labels = x_axis_labels) +  # Rename the x-axis labels\n  theme_minimal() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank())\n\n# math_by_gender_pv\n\n\nThe code chunk below patch all visulizations together.\n\n\nShow the code\npatchwork2 &lt;- pv_math_gender / pv_sci_gender / pv_read_gender | (pv_gender_stacked_bar /math_by_gender_pv)\npatchwork2 &lt;- patchwork2 +\n  plot_annotation(title = \"Singapore Students Performance in Mathematics, Reading, and Science by Gender\", \n                  theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)))\npatchwork2\n\n\n\n\n\nThe visualizations present educational performance among Singaporean students, by subject and gender.\n\nGender 2 performs slightly higher for Maths but slight worse in Reading compared to Gender 1. Both genders show a similar performance for science.\nGender 2 general has a larger spread compared to Gender 1, suggesting a higher variance among the students in terms of performance across the subjects.\nThe stacked bar charts reveal subtle differences in performance consistency across subjects and gender. Gender 1 exhibits a slightly higher consistency in Math, whereas Gender 2 demonstrates greater consistency in Reading.\nThe boxplots then zoom into the individual Math PV scores, segmented by gender. Gender 2 shows a general better performance compared to Gender 1 across all PVs.\nGenerally, Gender 2 has a high upper 25 percentile among all PVs, while the lower 25 percentile does not vary that much between the 2. This might be the cause of the observation discovered in the stacked barchart."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-3-relationship-between-performances-with-school",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-3-relationship-between-performances-with-school",
    "title": "Take-home Exercise 1",
    "section": "EDA 3: Relationship between Performances with School",
    "text": "EDA 3: Relationship between Performances with School\nthe code chunk below create a new dataframe\n\n\nShow the code\npv_school &lt;- pisa_new %&gt;% select(school = CNTSCHID, starts_with(\"PV_avg\"), starts_with(\"consistency\"), Gender = ST004D01T)\npv_school_summary &lt;- pv_school %&gt;%\n  group_by(school) %&gt;%\n  summarise(\n    avg_math = mean(PV_avg_math, na.rm = TRUE),\n    var_math = var(PV_avg_math, na.rm = TRUE),\n    avg_read = mean(PV_avg_read, na.rm = TRUE),\n    var_read = var(PV_avg_read, na.rm = TRUE),\n    avg_sci = mean(PV_avg_scie, na.rm = TRUE),\n    var_sci = var(PV_avg_scie, na.rm = TRUE),\n    no_students = n(),\n    no_1 = sum(Gender == '1', na.rm = TRUE),\n    no_2 = sum(Gender == '2', na.rm = TRUE)\n  ) %&gt;%\n  ungroup() %&gt;%\n  # Create bins for each variance column\n  mutate(across(starts_with(\"var_\"), ~cut(., \n                                          breaks = quantile(., probs = c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE),\n                                          labels = c(\"low\", \"lower-avg\", \"upper-avg\", \"high\"),\n                                          include.lowest = TRUE),\n                .names = \"binned_{.col}\"))\n\n\nThe code chunk below displayed the distribution of school‚Äôs average performance by subject.\n\n\nShow the code\n# Reshape the data for ggplot\npv_school_long &lt;- pv_school_summary %&gt;%\n  pivot_longer(\n    cols = starts_with(\"avg_\"),\n    names_to = \"subject\",\n    values_to = \"average_score\"\n  ) %&gt;%\n  mutate(subject = sub(\"avg_\", \"\", subject)) %&gt;%\n  pivot_longer(\n    cols = starts_with(\"binned_var_\"),\n    names_to = \"var_metric\",\n    values_to = \"variance_bin\"\n  ) %&gt;%\n  mutate(subject_var = sub(\"binned_var_\", \"\", var_metric)) %&gt;%\n  filter(subject == subject_var) # Ensure that the subject matches with its respective variance\n\n# Create the plot\nschool_plot&lt;- ggplot(pv_school_long, aes(y = subject, x = average_score)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               height = 0.5) +\n  geom_boxplot(width = .15,\n               outlier.shape = NA) +\n  stat_dots(aes(fill = variance_bin, color = variance_bin, alpha = 0.5),  \n            side = \"left\", \n            justification = 1.2, \n            binwidth = 2,\n            dotsize = 1.5) +\n  labs(title = 'Students Performance Acorss School', \n         x = \"Average PV by School\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(margin = margin(t = -5, b = 10))\n  ) \n\n#school_plot\n\n\nThe code chunk below checks for if the school preforms consistently acorss various subject using a correlation heatmap\n\n\nShow the code\n# Select variables of interest and rename them\nselected_avg &lt;- pv_school_summary %&gt;%\n  select(avg_math, avg_read, avg_sci) %&gt;%\n  rename(\n    \"Math Avg\" = avg_math,\n    \"Read Avg\" = avg_read,\n    \"Science Avg\" = avg_sci,\n  )\n\n# Create the correlogram\ncorrelogram_avg &lt;- ggcorrmat(\n  data = selected_avg,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title = \"Average School Performance\",\n  subtitle = \"School Performance is relatively related in a linear manner\"\n)\n\n# Display the correlogram\n#correlogram_avg\n\n# Select variables of interest and rename them\nselected_vars &lt;- pv_school_summary %&gt;%\n  select(var_math, var_read, var_sci) %&gt;%\n  rename(\n    \"Math Variance\" = var_math,\n    \"Read Variance\" = var_read,\n    \"Science Variance\" = var_sci\n  )\n\n# Create the correlogram\ncorrelogram_var &lt;- ggcorrmat(\n  data = selected_vars,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title = \"School Performance Consistency Acorss Students\",\n  subtitle = \"Consistency in Performance is relatively related in a linear manner\"\n)\n\n# Display the correlogram\n#correlogram_var\n\n\nThe code chunk below patch the plots in one plot.\n\n\nShow the code\npatchwork_sch &lt;- (school_plot/(correlogram_avg + correlogram_var)) + \n  plot_layout(heights = c(4, 1)) # This makes the left plot three times wider than the right ones\n\npatchwork_sch &lt;- patchwork_sch + \n  plot_annotation(title = \"Singapore Students Performance in Mathematics, Reading, and Science by School\") & \n  theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n\npatchwork_sch\n\n\n\n\n\nThe visualization presents a comparative distribution of average student performance scores in Mathematics, Reading, and Science across various schools.\n\nThe density plots for all 3 subjects shows two distinct peaks, this indicates a gap in terms of student‚Äôs performance between the 2 sectors of schools, which is likely to be private, and public.\nAdditionally, most number of schools with low variance among students performance which shaded in red is spotted along this upper part of the density curve. even stronger indication of general good performance across all students in the school.\nThis chart reveals potential relationship between school types and students pref romance in Maths, Science and Readings.\nThe 2 correlograms also highlights the correlationship in terms of subjetive performance for each school, suggesting that if the school does well in 1 subject, they are likely to do well in others. If the performance is consistent among students in 1 subject, the consistency is likely to be observed in other subjects as well."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-4-relationship-between-performances-with-socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-4-relationship-between-performances-with-socioeconomic-status",
    "title": "Take-home Exercise 1",
    "section": "EDA 4: Relationship between Performances with Socioeconomic Status",
    "text": "EDA 4: Relationship between Performances with Socioeconomic Status\nthe code chunk below create a new dataframe\n\n\nShow the code\npv_ESCS &lt;- pisa_new %&gt;% select(starts_with(\"PV_avg\"), starts_with(\"consistency\"), Gender = ST004D01T, ESCS)\n\n\nThe code chunk below creates a scatterstats plot for Maths and ESCS Relationship.\n\n\nShow the code\nescs_math &lt;- pv_ESCS %&gt;%\n  ggscatterstats(\n    x = ESCS, \n    y = PV_avg_math, \n    conf.level = 0.95,\n    bf.message = FALSE,\n    alpha = 0.5, \n    point.args = list(size = 2, alpha = 0.1, stroke = 0, color = 'grey20'),\n    xsidehistogram.args = list(fill = \"#c73824\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    ysidehistogram.args = list(fill = \"#0477bf\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    smooth.line.args = list(linewidth = 0.4, color = \"blue\", method = \"lm\", formula = y ~\n    x)\n  ) +\n  labs(\n    title = \"Math Performance\",\n    x = \"ESCS INDEX\",\n    y = \"Average Math Score\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n# escs_math\n\n\nThe code chunk below creates a scatterstats plot for Science and ESCS Relationship.\n\n\nShow the code\nescs_sci &lt;- pv_ESCS %&gt;%\n  ggscatterstats(\n    x = ESCS, \n    y = PV_avg_scie, \n    conf.level = 0.95,\n    bf.message = FALSE,\n    alpha = 0.5, \n    point.args = list(size = 2, alpha = 0.1, stroke = 0, color = 'grey20'),\n    xsidehistogram.args = list(fill = \"#c73824\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    ysidehistogram.args = list(fill = \"#0477bf\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    smooth.line.args = list(linewidth = 0.4, color = \"blue\", method = \"lm\", formula = y ~\n    x)\n  ) +\n  labs(\n    title = \"Science Performance\",\n    x = \"ESCS INDEX\",\n    y = \"Average Science Score\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n# escs_sci\n\n\nThe code chunk below creates a scatterstats plot for Reading and ESCS Relationship.\n\n\nShow the code\nescs_read &lt;- pv_ESCS %&gt;%\n  ggscatterstats(\n    x = ESCS, \n    y = PV_avg_read, \n    conf.level = 0.95,\n    bf.message = FALSE,\n    alpha = 0.5, \n    point.args = list(size = 2, alpha = 0.1, stroke = 0, color = 'grey20'),\n    xsidehistogram.args = list(fill = \"#c73824\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    ysidehistogram.args = list(fill = \"#0477bf\", color = \"white\", na.rm = TRUE, alpha = 0.7),\n    smooth.line.args = list(linewidth = 0.4, color = \"blue\", method = \"lm\", formula = y ~\n    x)\n  ) +\n  labs(\n    title = \"Reading Performance\",\n    x = \"ESCS INDEX\",\n    y = \"Average Reading Score\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n# escs_read\n\n\nThe code chunk below plots a correlation heatmap between aggregated PV values with ESCS Index\n\n\nShow the code\n# Select variables of interest and rename them\nselected_vars &lt;- pisa_new %&gt;%\n  select(starts_with('PV_'),\n         ESCS)\n\n# Create the correlogram\ncorrelogram2 &lt;- ggcorrmat(\n  data = selected_vars,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title = \"Correlogram for Student Performance\",\n  subtitle = \"Subject Performance is relatively related in a linear manner\"\n)\n# orrelogram2\n\n\nThe code chunk below patch all visulizations together.\n\n\nShow the code\npatchwork3 &lt;- (correlogram2 | escs_math) / (escs_sci | escs_read)\npatchwork3 &lt;- patchwork3 +\n  plot_annotation(title = \"Singapore Students Performance in Mathematics, Reading, and Science by ESCS\", \n                  theme = theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)))\npatchwork3\n\n\n\n\n\nThe chart illustrates a moderate, positive correlation between the Economic, Social, and Cultural Status (ESCS) Index and student performance scores in Mathematics, Reading, and Science for a sample of Singaporean students.\n\nThe p-value reported are all below 0.05, this indicates that the null hypothesis can be rejected with a high degree of confidence. There is a statistically significant correlation between Performance and the ESCS Index for all subjects.\nPearson correlation coefficients is around 0.44 to 0.45 across all subjects, the data suggests that higher socio-economic status is associated with better academic performance. However, as the values is small, this relationship is only a moderate relationship.\nAdditionally, there is also no significant difference between the influence by ESCS to different subjects."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-5-how-about-socioeconomic-status-and-school",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#eda-5-how-about-socioeconomic-status-and-school",
    "title": "Take-home Exercise 1",
    "section": "EDA 5: How about Socioeconomic Status and School ?",
    "text": "EDA 5: How about Socioeconomic Status and School ?\nEDA 3 reveals that a small groups of schools are preforming relatively better than other schools, EDA 4 proves a moderate linear relationship between socioeconomic status and student‚Äôs performance. Might this be a reason that certain school preforms extremely well among all students to the compared to other schools? Which subjects will be influenced the most?\nthe code chunk below assign a group number for different schools in terms of their performance. 5 being the best preformaning school, while 1 is the least.\n\n\nShow the code\npv_school_group &lt;- pv_school_summary %&gt;%\n  mutate(across(starts_with(\"avg_\"), ~cut(., \n                                          breaks = quantile(., probs = c(0, 0.2, 0.4, 0.6, 0.7, 1), na.rm = TRUE),\n                                          labels = c(1, 2, 3, 4, 5),\n                                          include.lowest = TRUE),\n                .names = \"binned_{.col}\"))\n# it is noticed that most school has a consistency in terms of performance, one single field will be assigned based on the most appeared bin for easier comparison. \n\npv_school_group &lt;- pv_school_group %&gt;%\n  rowwise() %&gt;%\n  mutate(sch_group = factor(round(mean(as.numeric(as.character(c_across(starts_with(\"binned_avg\")))), na.rm = TRUE)))) %&gt;%\n  ungroup()\n\n\nthe code chunk below creates a new dataframe and join the school group with the individual student‚Äôs ESCS index.\n\n\nShow the code\nschool_escs_new &lt;- pisa_new %&gt;% select(school = CNTSCHID, ESCS)\n\nschool_escs_new  &lt;- school_escs_new  %&gt;%\n  left_join(pv_school_group %&gt;% select(school, sch_group), by = \"school\") %&gt;%\n  mutate(sch_group = factor(sch_group, levels = c(\"1\", \"2\", \"3\", \"4\", \"5\"))\n         )\n\n\nThe code chunk below conducted one-way ANOVA test between ESCS index Across Different School Group.\n\n\nShow the code\nanova &lt;- ggbetweenstats(\n  data = school_escs_new,\n  x = sch_group, \n  y = ESCS,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n) +\n  labs(title = \"ESCS index Across Different School Group\", x = \"School Group\") +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5)\n  )\n\n# anova\n\n\nBut will a students who are from lower ESCS tier preform bettwe in a better school?\nthe code chunk below creates a new dataframe and join the school group with the individual student performance.\n\n\nShow the code\nschool_escs &lt;- pisa_new %&gt;% select(school = CNTSCHID, starts_with(\"PV_avg\"), ESCS_bin)\n\nschool_escs &lt;- school_escs %&gt;%\n  left_join(pv_school_group %&gt;% select(school, sch_group), by = \"school\")\n\nschool_escs_long &lt;- school_escs %&gt;%\n  pivot_longer(\n    cols = c(PV_avg_math, PV_avg_scie, PV_avg_read), \n    names_to = \"subject\",      \n    values_to = \"value\"       \n  )\n\nschool_escs_long &lt;- school_escs_long %&gt;%\n  mutate(sch_group = factor(sch_group, levels = c(\"1\", \"2\", \"3\", \"4\", \"5\")),\n         subject = factor(subject, \n                          levels = c(\"PV_avg_math\", \"PV_avg_read\", \"PV_avg_scie\"),\n                          labels = c(\"Math\", \"Reading\", \"Science\")))\n\n\nThe code chunk below draws histogram to see the distribution of PVs across different school type and ESCS tiers.\n\n\nShow the code\nbase_color &lt;- \"#c73824\"\nred_shades &lt;- c(\n  lighten(base_color, amount = 0.9),  # Lightest\n  lighten(base_color, amount = 0.7),\n  lighten(base_color, amount = 0.5),\n  lighten(base_color, amount = 0.3),\n  lighten(base_color, amount = 0.1)\n)\n\nsch_escs_plot &lt;- ggplot(school_escs_long, aes(x = ESCS_bin, y = value, fill = ESCS_bin)) + \n  geom_boxplot() + \n  facet_grid(sch_group ~ subject) +\n  scale_fill_manual(values = red_shades) +\n  labs(title = \"Distribution of Students Performance by School Group and ESCS tier\") +\n  theme_minimal() +\n  theme(\n    legend.title = element_blank(),\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.background = element_rect(fill = \"white\", colour = \"white\"),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_line(color = \"grey90\"),\n    strip.background = element_rect(fill = \"black\"),\n    strip.text = element_text(color = \"white\"), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_rect(colour = \"black\", fill=NA, size=0.5)  # Add border around each facet\n  )\n# sch_escs_plot\n\n\n\n\nShow the code\npatchwork_5 &lt;- (anova|sch_escs_plot) \n\npatchwork_5 &lt;- patchwork_5 + \n  plot_annotation(title = \"Students Performance by School Group and ESCS\") & \n  theme(plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5))\n\npatchwork_5\n\n\n\n\n\nThe ANOVA test on the left shows a distribution of the Economic, Social, and Cultural Status (ESCS) index across different school groups.\n\nSchool Groups with higher average preform show a higher ESCS index.\nF-statistic is approximately 294.76 with a p-value of approximately 5.89e-210. This suggests that there is a statistically significant difference in the ESCS index among the different school groups.\nAbove the violin plots, there are lines connecting the different groups with associated p-values indicating the results of each pairwise comparison. This suggests that all groups shown are having small p values, suggesting that the ESCS index means of each pair of groups are significantly different from each other.\nThe violin plot overlaid with box plots for school groups 5 shows a much wider sections of the violin indicating at the higher ESCS, suggesting a higher density of students are from this portion\n\nThe box plots arranged in a grid, showing student performance in three different subjects: Math, Reading, and Science, among 4 different ESCS tiers. This plot aims to understand within the same group of school, would the difference make ESCS a difference in student performance.\n\nComparing Students performance within each school group, the observation of higher ESCS tier reflects a higher performance seems to hold truth as well.\nA notably higher number of outliers are observed for School Group 5 across all ESCS tiers, particularly in Math and Science. This pattern may indicate a wider range of performance levels or varying factors affecting achievement within this group.\nIn contrast, the subject of Reading displays outliers across all school groups and tiers, hinting at a broader variance in performance among Singaporean students in Reading compared to Math and Science."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#appendix-how-about-socioeconomic-status-and-gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#appendix-how-about-socioeconomic-status-and-gender",
    "title": "Take-home Exercise 1",
    "section": "Appendix: How about Socioeconomic Status and Gender ?",
    "text": "Appendix: How about Socioeconomic Status and Gender ?\nThe code chunk below creates a new datafrmae for gender and escs information.\n\n\nShow the code\n# the code chunk below creates a new dataframe and join the school group with the individual student.\ngender_escs &lt;- pisa_new %&gt;% select(starts_with(\"PV_avg\"), ESCS_bin, Gender = ST004D01T)\n\ngender_escs_long &lt;- gender_escs %&gt;%\n  pivot_longer(\n    cols = c(PV_avg_math, PV_avg_scie, PV_avg_read), \n    names_to = \"subject\",      \n    values_to = \"value\"       \n  )\n\ngender_escs_long &lt;- gender_escs_long %&gt;%\n  mutate(subject = factor(subject, \n                          levels = c(\"PV_avg_math\", \"PV_avg_read\", \"PV_avg_scie\"),\n                          labels = c(\"Math\", \"Reading\", \"Science\")))\n\n\nThe code chunk below draws a histogram to see the distribution of PVs across different ESCS tier and Gender.\n\n\nShow the code\nbase_color &lt;- \"#c73824\"\nred_shades &lt;- c(\n  lighten(base_color, amount = 0.9),  # Lightest\n  lighten(base_color, amount = 0.7),\n  lighten(base_color, amount = 0.5),\n  lighten(base_color, amount = 0.3),\n  lighten(base_color, amount = 0.1)\n)\n\nggplot(gender_escs_long, aes(x = ESCS_bin, y = value, fill = ESCS_bin)) + \n  geom_boxplot() + \n  facet_grid(Gender ~ subject) +\n  scale_fill_manual(values = red_shades) +\n  labs(title = \"Distribution of Students Performance by Gender and ESCS tier\", x = \"ESCS Tier\") +\n  theme_minimal() +\n  theme(\n    legend.title = element_blank(),\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.background = element_rect(fill = \"white\", colour = \"white\"),\n    panel.grid.major = element_line(color = \"grey90\"),\n    panel.grid.minor = element_line(color = \"grey90\"),\n    strip.background = element_rect(fill = \"black\"),\n    strip.text = element_text(color = \"white\"), \n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_rect(colour = \"black\", fill=NA, size=0.5)  # Add border around each facet\n  )\n\n\n\n\n\n‚Äì end of page ‚Äì"
  }
]